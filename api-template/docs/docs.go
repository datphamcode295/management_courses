// Package docs GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import (
	"bytes"
	"encoding/json"
	"strings"
	"text/template"

	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/v1/adventure": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get adventure",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adventure"
                ],
                "summary": "get adventure",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pageNumber",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.adventureResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/adventure/battle/{:id}": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get adventure battle log",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adventure"
                ],
                "summary": "get adventure battle log",
                "parameters": [
                    {
                        "type": "string",
                        "description": "battle id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.startAdventureResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/adventure/claim-reward": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "claim reward combat",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adventure"
                ],
                "summary": "claim reward combat",
                "parameters": [
                    {
                        "type": "string",
                        "description": "challenge string",
                        "name": "Challenge",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "signature ",
                        "name": "Signature",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "claim reward combat request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.claimRewardCombatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.claimRewardCombatResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/adventure/fail": {
            "post": {
                "description": "fail adventure",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adventure"
                ],
                "summary": "fail adventure",
                "parameters": [
                    {
                        "type": "string",
                        "description": "challenge string",
                        "name": "Challenge",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "signature ",
                        "name": "Signature",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "fail adventure request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.failAdventureRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.failAdventureResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/adventure/init": {
            "post": {
                "description": "init adventure",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adventure"
                ],
                "summary": "init adventure",
                "parameters": [
                    {
                        "type": "string",
                        "description": "challenge string",
                        "name": "Challenge",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "signature ",
                        "name": "Signature",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "init adventure request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.adventureRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.initAdventureResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/adventure/logs": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get adventure log",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adventure"
                ],
                "summary": "get adventure log",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pageNumber",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "walletAddress",
                        "name": "walletAddress",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "adventureId",
                        "name": "adventureId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "adventureLevel",
                        "name": "adventureLevel",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "status",
                        "name": "status",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "isWin",
                        "name": "isWin",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "battleId",
                        "name": "battleId",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "txHash",
                        "name": "txHash",
                        "in": "query"
                    },
                    {
                        "type": "boolean",
                        "description": "isClaimed",
                        "name": "isClaimed",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.adventureLogResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/adventure/logs/unclaimed-rewards": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get unclaimed rewards adventure log",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adventure"
                ],
                "summary": "get unclaimed rewards adventure log",
                "parameters": [
                    {
                        "type": "string",
                        "description": "walletAddress",
                        "name": "walletAddress",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.unclaimedRewardsAdventureLogResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/adventure/start": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "start adventure",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adventure"
                ],
                "summary": "start adventure",
                "parameters": [
                    {
                        "type": "string",
                        "description": "challenge string",
                        "name": "Challenge",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "signature ",
                        "name": "Signature",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "start adventure request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.startAdventureRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.startAdventureResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/adventure/suggestion/:id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get suggestion character for adventure pool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adventure"
                ],
                "summary": "get suggestion character for adventure pool",
                "parameters": [
                    {
                        "type": "string",
                        "description": "walletAddress",
                        "name": "walletAddress",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.suggestionCharacterAdventureResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/adventure/suggestions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get suggestion character for all active adventure pools",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Adventure"
                ],
                "summary": "get suggestion character for all active adventure pools",
                "parameters": [
                    {
                        "type": "string",
                        "description": "walletAddress",
                        "name": "walletAddress",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.suggestionCharacterAdventuresResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/challenge": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get challenge",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "get challenge",
                "parameters": [
                    {
                        "type": "string",
                        "description": "wallet address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.getChallengeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/auth/upsert-wallet": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "upsert wallet address",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "upsert wallet address",
                "parameters": [
                    {
                        "type": "string",
                        "description": "wallet address",
                        "name": "walletAddress",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.upsertWalletResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/crew/character": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get my crew",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Crew"
                ],
                "summary": "get my crew",
                "parameters": [
                    {
                        "type": "string",
                        "description": "wallet address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "pageNumber",
                        "name": "pageNumber",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "role",
                        "name": "role",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "dameType",
                        "name": "dameType",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "advantage",
                        "name": "advantage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "disadvantage",
                        "name": "disadvantage",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "asc | desc",
                        "name": "tierSort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "asc | desc",
                        "name": "raritySort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "asc | desc",
                        "name": "totalWorkedBlockSort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "asc | desc",
                        "name": "levelSort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "asc | desc",
                        "name": "strengthSort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "asc | desc",
                        "name": "staminaSort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "asc | desc",
                        "name": "vitalitySort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "asc | desc",
                        "name": "courageSort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "asc | desc",
                        "name": "dexteritySort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "asc | desc",
                        "name": "intelligenceSort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "asc | desc",
                        "name": "adventureChanceSort",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.myCrewResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/crew/character/:id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get character etail by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Crew"
                ],
                "summary": "get character etail by id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "wallet address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.characterDetailResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/crew/character/pill": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "use pill",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Crew"
                ],
                "summary": "use pill",
                "parameters": [
                    {
                        "type": "string",
                        "description": "challenge string",
                        "name": "Challenge",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "signature ",
                        "name": "Signature",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "use pill request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.usePillRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.usePillResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/crew/character/pill/:id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get pill info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Crew"
                ],
                "summary": "get pill info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "character id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.characterPillInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/crew/character/refill": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "refill energy",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Crew"
                ],
                "summary": "refill energy",
                "parameters": [
                    {
                        "type": "string",
                        "description": "challenge string",
                        "name": "Challenge",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "signature ",
                        "name": "Signature",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "refill energy request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.refillEnergyRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.refillEnergyResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/crew/character/refill/:id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get refill energy info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Crew"
                ],
                "summary": "get refill energy info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "character id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.characterRefillInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/crew/character/transfer": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "transfer character",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Crew"
                ],
                "summary": "transfer character",
                "parameters": [
                    {
                        "type": "string",
                        "description": "challenge string",
                        "name": "Challenge",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "signature ",
                        "name": "Signature",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "transfer character request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.transferCharacterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.transferCharacterResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/daily-work": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get daily work",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Daily Work"
                ],
                "summary": "get daily work",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pageNumber",
                        "name": "pageNumber",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "name",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.dailyWorkResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/daily-work/claim-salary": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "claim salary",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Daily Work"
                ],
                "summary": "claim salary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "challenge string",
                        "name": "Challenge",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "signature ",
                        "name": "Signature",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "claim salary request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.claimSalaryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.claimSalaryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/daily-work/info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get my working info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Daily Work"
                ],
                "summary": "get my working info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "wallet address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "character name slug",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "work slug",
                        "name": "location",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "total_score | level | salary",
                        "name": "sortField",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "asc | desc",
                        "name": "sortOrder",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "pageNumber",
                        "name": "pageNumber",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "page size",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.myWorkingInfoResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/daily-work/quit": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "quit working",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Daily Work"
                ],
                "summary": "quit working",
                "parameters": [
                    {
                        "type": "string",
                        "description": "challenge string",
                        "name": "Challenge",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "signature ",
                        "name": "Signature",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "quit working request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.quitWorkingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.quitWorkingResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/daily-work/start": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "start working",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Daily Work"
                ],
                "summary": "start working",
                "parameters": [
                    {
                        "type": "string",
                        "description": "challenge string",
                        "name": "Challenge",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "signature ",
                        "name": "Signature",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "start working request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.startWorkingRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.startWorkingResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/daily-work/suggestion/:id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get suggestion character for pool",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Daily Work"
                ],
                "summary": "get suggestion character for pool",
                "parameters": [
                    {
                        "type": "string",
                        "description": "walletAddress",
                        "name": "walletAddress",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.suggestionCharacterMineResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/daily-work/suggestions": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get suggestion character for all active pools",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Daily Work"
                ],
                "summary": "get suggestion character for all active pools",
                "parameters": [
                    {
                        "type": "string",
                        "description": "walletAddress",
                        "name": "walletAddress",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.suggestionCharacterMinesResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/daily-work/summary-info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get my working summary info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Daily Work"
                ],
                "summary": "get my working summary info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "wallet address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.myWorkingInfoSummaryResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/daily-work/working-filter": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get my working filter info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Daily Work"
                ],
                "summary": "get my working filter info",
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.workingInfoFilterResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/game/pack-recruit": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "mint character",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "mint character",
                "parameters": [
                    {
                        "type": "string",
                        "description": "challenge string",
                        "name": "Challenge",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "signature ",
                        "name": "Signature",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "mint pack character request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.mintPackCharacterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.mintPackCharacterResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/game/recruit": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "mint character",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "mint character",
                "parameters": [
                    {
                        "type": "string",
                        "description": "challenge string",
                        "name": "Challenge",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "signature ",
                        "name": "Signature",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "mint character request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.mintCharacterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.characterDetailResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/game/upgrade": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "upgrade character",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "upgrade character",
                "parameters": [
                    {
                        "type": "string",
                        "description": "challenge string",
                        "name": "Challenge",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "signature ",
                        "name": "Signature",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "upgrade character request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.updgradeCharacterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.upgradeCharacterResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/game/upgrade-info/:id": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "upgrade character info",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Game"
                ],
                "summary": "upgrade character info",
                "parameters": [
                    {
                        "type": "string",
                        "description": "id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.upgradeCharacterInfoResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/leaderboard/top-level": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get leaderboard top level",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leaderboard"
                ],
                "summary": "get leaderboard top level",
                "parameters": [
                    {
                        "type": "string",
                        "description": "pageNumber",
                        "name": "pageNumber",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "pageSize",
                        "name": "pageSize",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.leaderboardTopLevelResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/referral/bond": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "bond referral code handler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Referral"
                ],
                "summary": "bond referral code handler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "challenge string",
                        "name": "Challenge",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "signature ",
                        "name": "Signature",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "referrer's referral code",
                        "name": "referralCode",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.responseData"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/referral/claim": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "claim referral reward handler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Referral"
                ],
                "summary": "claim referral reward handler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "challenge string",
                        "name": "Challenge",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "signature ",
                        "name": "Signature",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "claim referral request",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/handler.claimReferralRewardRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.claimReferralRewardResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/referral/claim-setup": {
            "post": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get claim id for referral reward handler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Referral"
                ],
                "summary": "get claim id for referral reward handler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "challenge string",
                        "name": "Challenge",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "signature ",
                        "name": "Signature",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.claimReferralRewardSetupResponse"
                        }
                    }
                }
            }
        },
        "/api/v1/referral/code": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get referral code handler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Referral"
                ],
                "summary": "get referral code handler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "wallet address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.getReferralCodeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.Error"
                        }
                    }
                }
            }
        },
        "/api/v1/referral/reward-info": {
            "get": {
                "security": [
                    {
                        "ApiKeyAuth": []
                    }
                ],
                "description": "get referral reward info handler",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Referral"
                ],
                "summary": "get referral reward info handler",
                "parameters": [
                    {
                        "type": "string",
                        "description": "owner address",
                        "name": "address",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ok",
                        "schema": {
                            "$ref": "#/definitions/handler.getReferralRewardInfoResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "battle.AdventureLogData": {
            "type": "object",
            "properties": {
                "backgroundJpg": {
                    "type": "string"
                },
                "backgroundWebp": {
                    "type": "string"
                },
                "battle": {
                    "$ref": "#/definitions/battle.AdventureReport"
                },
                "battleId": {
                    "type": "integer"
                },
                "health": {
                    "type": "integer"
                },
                "reward": {
                    "$ref": "#/definitions/battle.AdventureReward"
                }
            }
        },
        "battle.AdventureReport": {
            "type": "object",
            "properties": {
                "battles": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/battle.BattleReport"
                    }
                },
                "character": {
                    "$ref": "#/definitions/battle.Fighter"
                },
                "isCharacterWin": {
                    "type": "boolean"
                },
                "monsters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/battle.Fighter"
                    }
                }
            }
        },
        "battle.AdventureReward": {
            "type": "object",
            "properties": {
                "battleReward": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/battle.BattleReward"
                    }
                },
                "totalRewardBSCD": {
                    "type": "string"
                },
                "totalRewardMST": {
                    "type": "string"
                }
            }
        },
        "battle.BattleAttribute": {
            "type": "object",
            "properties": {
                "accuracy": {
                    "type": "number"
                },
                "dameType": {
                    "type": "string"
                },
                "defense": {
                    "type": "number"
                },
                "health": {
                    "type": "number"
                },
                "magicResistance": {
                    "type": "number"
                },
                "magicalAttack": {
                    "type": "number"
                },
                "maxHealth": {
                    "type": "number"
                },
                "physicalAttack": {
                    "type": "number"
                }
            }
        },
        "battle.BattleReport": {
            "type": "object",
            "properties": {
                "fighterOne": {
                    "$ref": "#/definitions/battle.Fighter"
                },
                "fighterTwo": {
                    "$ref": "#/definitions/battle.Fighter"
                },
                "isFighterOneWin": {
                    "type": "boolean"
                },
                "turns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/battle.TurnReport"
                    }
                }
            }
        },
        "battle.BattleReward": {
            "type": "object",
            "properties": {
                "battleNum": {
                    "type": "integer"
                },
                "rewardBSCD": {
                    "type": "string"
                },
                "rewardMST": {
                    "type": "string"
                }
            }
        },
        "battle.Fighter": {
            "type": "object",
            "properties": {
                "animatedMP4": {
                    "type": "string"
                },
                "animatedWebM": {
                    "type": "string"
                },
                "assetId": {
                    "type": "string"
                },
                "attribute": {
                    "$ref": "#/definitions/battle.FighterAttribute"
                },
                "avatar": {
                    "type": "string"
                },
                "battleAttribute": {
                    "$ref": "#/definitions/battle.BattleAttribute"
                },
                "externalId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isCharacter": {
                    "type": "boolean"
                },
                "level": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "poster": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "battle.FighterAttribute": {
            "type": "object",
            "properties": {
                "courage": {
                    "type": "integer"
                },
                "dexterity": {
                    "type": "integer"
                },
                "intelligence": {
                    "type": "integer"
                },
                "stamina": {
                    "type": "integer"
                },
                "strength": {
                    "type": "integer"
                },
                "vitality": {
                    "type": "integer"
                }
            }
        },
        "battle.TurnReport": {
            "type": "object",
            "properties": {
                "dameTaken": {
                    "type": "number"
                },
                "fighterOneHealthEnd": {
                    "type": "number"
                },
                "fighterOneHealthStart": {
                    "type": "number"
                },
                "fighterOneId": {
                    "type": "string"
                },
                "fighterTwoHealthEnd": {
                    "type": "number"
                },
                "fighterTwoHealthStart": {
                    "type": "number"
                },
                "fighterTwoId": {
                    "type": "string"
                },
                "isFighterOneAttack": {
                    "type": "boolean"
                },
                "isMissed": {
                    "type": "boolean"
                },
                "randomNumber": {
                    "type": "number"
                },
                "turnNumber": {
                    "type": "integer"
                }
            }
        },
        "errors.Error": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.ChallengeData": {
            "type": "object",
            "properties": {
                "challenge": {
                    "type": "string"
                }
            }
        },
        "handler.ReferralCodeData": {
            "type": "object",
            "properties": {
                "isBonded": {
                    "type": "boolean"
                },
                "referralCode": {
                    "type": "string"
                },
                "referrerCode": {
                    "type": "string"
                }
            }
        },
        "handler.RewardInfo": {
            "type": "object",
            "properties": {
                "referralProgram": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.ReferralProgram"
                    }
                },
                "reward": {
                    "type": "number"
                },
                "topBonus": {
                    "type": "number"
                },
                "totalFriend": {
                    "type": "integer"
                }
            }
        },
        "handler.adventureLogResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AdventureLogData"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/model.Pagination"
                }
            }
        },
        "handler.adventureRequest": {
            "type": "object",
            "properties": {
                "adventureId": {
                    "type": "string"
                },
                "adventureLevel": {
                    "type": "integer"
                },
                "characterId": {
                    "type": "string"
                }
            }
        },
        "handler.adventureResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AdventureData"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/model.Pagination"
                }
            }
        },
        "handler.characterDetailResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.CharacterData"
                }
            }
        },
        "handler.characterPillInfo": {
            "type": "object",
            "properties": {
                "animatedMP4": {
                    "type": "string"
                },
                "animatedWebM": {
                    "type": "string"
                },
                "health": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "maxScore": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "rarity": {
                    "type": "string"
                },
                "requiredAmountBSCD": {
                    "type": "number"
                },
                "requiredAmountMST": {
                    "type": "number"
                },
                "tokenId": {
                    "type": "string"
                },
                "totalScore": {
                    "type": "integer"
                }
            }
        },
        "handler.characterPillInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.characterPillInfo"
                }
            }
        },
        "handler.characterRefillInfo": {
            "type": "object",
            "properties": {
                "animatedMP4": {
                    "type": "string"
                },
                "animatedWebM": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "maxScore": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "productivity": {
                    "type": "integer"
                },
                "rarity": {
                    "type": "string"
                },
                "requiredAmount": {
                    "type": "integer"
                },
                "token": {
                    "type": "string"
                },
                "tokenId": {
                    "type": "string"
                },
                "totalScore": {
                    "type": "integer"
                }
            }
        },
        "handler.characterRefillInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.characterRefillInfo"
                }
            }
        },
        "handler.claimReferralRewardRequest": {
            "type": "object",
            "properties": {
                "txHash": {
                    "type": "string"
                }
            }
        },
        "handler.claimReferralRewardResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.responseData"
                }
            }
        },
        "handler.claimReferralRewardSetup": {
            "type": "object",
            "properties": {
                "claimId": {
                    "type": "integer"
                },
                "signature": {
                    "type": "string"
                },
                "totalAmount": {
                    "type": "number"
                }
            }
        },
        "handler.claimReferralRewardSetupResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.claimReferralRewardSetup"
                }
            }
        },
        "handler.claimRewardCombatRequest": {
            "type": "object",
            "properties": {
                "txHash": {
                    "type": "string"
                }
            }
        },
        "handler.claimRewardCombatResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.responseData"
                }
            }
        },
        "handler.claimSalaryRequest": {
            "type": "object",
            "properties": {
                "poolId": {
                    "type": "integer"
                },
                "txHash": {
                    "type": "string"
                }
            }
        },
        "handler.claimSalaryResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.responseData"
                }
            }
        },
        "handler.dailyWorkResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DailyWorkData"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/model.Pagination"
                }
            }
        },
        "handler.failAdventureRequest": {
            "type": "object",
            "properties": {
                "tokenId": {
                    "type": "string"
                }
            }
        },
        "handler.failAdventureResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.responseData"
                }
            }
        },
        "handler.filterWorkingInfoData": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "handler.getChallengeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.ChallengeData"
                }
            }
        },
        "handler.getReferralCodeResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.ReferralCodeData"
                }
            }
        },
        "handler.getReferralRewardInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.RewardInfo"
                }
            }
        },
        "handler.initAdventureData": {
            "type": "object",
            "properties": {
                "battleInfo": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "monsterIds": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "nftAddress": {
                    "type": "string"
                },
                "results": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "signature": {
                    "type": "string"
                },
                "tokenId": {
                    "type": "string"
                }
            }
        },
        "handler.initAdventureResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.initAdventureData"
                }
            }
        },
        "handler.leaderboardTopLevelResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.LeaderboardTopLevelCharacterData"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/model.Pagination"
                }
            }
        },
        "handler.mintCharacterRequest": {
            "type": "object",
            "properties": {
                "txHash": {
                    "type": "string"
                }
            }
        },
        "handler.mintPackCharacterRequest": {
            "type": "object",
            "properties": {
                "txHash": {
                    "type": "string"
                }
            }
        },
        "handler.mintPackCharacterResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CharacterData"
                    }
                }
            }
        },
        "handler.myCrewResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CharacterData"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/model.Pagination"
                }
            }
        },
        "handler.myWorkingInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CharacterWorkingData"
                    }
                },
                "metadata": {
                    "$ref": "#/definitions/model.Pagination"
                },
                "summaryInfo": {
                    "$ref": "#/definitions/model.SummaryWorkingData"
                }
            }
        },
        "handler.myWorkingInfoSummaryResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.SummaryWorkingData"
                }
            }
        },
        "handler.quitWorkingRequest": {
            "type": "object",
            "properties": {
                "poolId": {
                    "type": "integer"
                },
                "txHash": {
                    "type": "string"
                }
            }
        },
        "handler.quitWorkingResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.responseData"
                }
            }
        },
        "handler.refillEnergyRequest": {
            "type": "object",
            "properties": {
                "txHash": {
                    "type": "string"
                }
            }
        },
        "handler.refillEnergyResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.responseData"
                }
            }
        },
        "handler.responseData": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "handler.startAdventureRequest": {
            "type": "object",
            "properties": {
                "txHash": {
                    "type": "string"
                }
            }
        },
        "handler.startAdventureResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/battle.AdventureLogData"
                }
            }
        },
        "handler.startWorkingRequest": {
            "type": "object",
            "properties": {
                "poolId": {
                    "type": "integer"
                },
                "txHash": {
                    "type": "string"
                }
            }
        },
        "handler.startWorkingResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.responseData"
                }
            }
        },
        "handler.suggestionCharacterAdventureResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AdventureSuggestedCharactersByDungeonLevel"
                    }
                }
            }
        },
        "handler.suggestionCharacterAdventuresResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AdventureSuggestedCharacters"
                    }
                }
            }
        },
        "handler.suggestionCharacterMineResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CharacterData"
                    }
                }
            }
        },
        "handler.suggestionCharacterMinesResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.DailyWorkSuggestedCharacters"
                    }
                }
            }
        },
        "handler.transferCharacterRequest": {
            "type": "object",
            "properties": {
                "characterId": {
                    "type": "string"
                },
                "txHash": {
                    "type": "string"
                }
            }
        },
        "handler.transferCharacterResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.responseData"
                }
            }
        },
        "handler.unclaimedRewardsAdventureLogResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/model.UnclaimedRewardsAdventureLogData"
                }
            }
        },
        "handler.updgradeCharacterRequest": {
            "type": "object",
            "properties": {
                "txHash": {
                    "type": "string"
                }
            }
        },
        "handler.upgradeCharacterInfo": {
            "type": "object",
            "properties": {
                "feeBSCD": {
                    "type": "number"
                },
                "feeMST": {
                    "type": "number"
                },
                "level": {
                    "type": "integer"
                },
                "successRate": {
                    "type": "number"
                }
            }
        },
        "handler.upgradeCharacterInfoResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.upgradeCharacterInfo"
                }
            }
        },
        "handler.upgradeCharacterResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.upgradeCharacterResult"
                }
            }
        },
        "handler.upgradeCharacterResult": {
            "type": "object",
            "properties": {
                "result": {
                    "type": "string"
                }
            }
        },
        "handler.upsertWalletResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.responseData"
                }
            }
        },
        "handler.usePillRequest": {
            "type": "object",
            "properties": {
                "txHash": {
                    "type": "string"
                }
            }
        },
        "handler.usePillResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/handler.responseData"
                }
            }
        },
        "handler.workingInfoFilterResponse": {
            "type": "object",
            "properties": {
                "location": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.filterWorkingInfoData"
                    }
                },
                "name": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/handler.filterWorkingInfoData"
                    }
                }
            }
        },
        "model.AdventureData": {
            "type": "object",
            "properties": {
                "adventureProbabilities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AdventureProbability"
                    }
                },
                "assetId": {
                    "type": "string"
                },
                "banner": {
                    "type": "string"
                },
                "bannerJPG": {
                    "type": "string"
                },
                "bannerWebP": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dungeonCost": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "enemies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AdventureEnemies"
                    }
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "poolId": {
                    "type": "integer"
                },
                "requirement": {
                    "$ref": "#/definitions/model.AdventureRequirement"
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.AdventureEnemies": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "slug": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "model.AdventureLogData": {
            "type": "object",
            "properties": {
                "adventure": {
                    "$ref": "#/definitions/model.AdventureData"
                },
                "adventureLevel": {
                    "type": "integer"
                },
                "character": {
                    "$ref": "#/definitions/model.CharacterData"
                },
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isWin": {
                    "type": "boolean"
                },
                "monsters": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "owner_address": {
                    "type": "string"
                },
                "reward": {
                    "$ref": "#/definitions/model.AdventureLogReward"
                }
            }
        },
        "model.AdventureLogReward": {
            "type": "object",
            "properties": {
                "battleReward": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.BattleRewardLog"
                    }
                },
                "totalRewardBSCD": {
                    "type": "string"
                },
                "totalRewardMST": {
                    "type": "string"
                }
            }
        },
        "model.AdventureProbability": {
            "type": "object",
            "properties": {
                "adventureLevel": {
                    "type": "integer"
                },
                "characterLevel": {
                    "type": "integer"
                },
                "numBoss": {
                    "type": "integer"
                },
                "numCreep": {
                    "type": "integer"
                },
                "probability": {
                    "$ref": "#/definitions/model.RarityProbability"
                }
            }
        },
        "model.AdventureRequirement": {
            "type": "object",
            "properties": {
                "levelRange": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "model.AdventureSuggestedCharacters": {
            "type": "object",
            "properties": {
                "characters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CharacterData"
                    }
                },
                "name": {
                    "type": "string"
                },
                "poolId": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "model.AdventureSuggestedCharactersByDungeonLevel": {
            "type": "object",
            "properties": {
                "characters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CharacterData"
                    }
                },
                "dungeonCost": {
                    "type": "number"
                },
                "dungeonLevel": {
                    "type": "integer"
                }
            }
        },
        "model.AttributeData": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "model.AttributeRequirement": {
            "type": "object",
            "properties": {
                "isAdvantage": {
                    "type": "boolean"
                },
                "name": {
                    "type": "string"
                },
                "value": {
                    "type": "integer"
                }
            }
        },
        "model.BattleRewardLog": {
            "type": "object",
            "properties": {
                "battleNum": {
                    "type": "integer"
                },
                "rewardBSCD": {
                    "type": "string"
                },
                "rewardMST": {
                    "type": "string"
                }
            }
        },
        "model.CharacterData": {
            "type": "object",
            "properties": {
                "advantage": {
                    "type": "string"
                },
                "adventureChance": {
                    "type": "integer"
                },
                "adventureTicketCost": {
                    "type": "integer"
                },
                "animatedMP4": {
                    "type": "string"
                },
                "animatedWebM": {
                    "type": "string"
                },
                "courage": {
                    "type": "integer"
                },
                "dameType": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "dexterity": {
                    "type": "integer"
                },
                "disadvantage": {
                    "type": "string"
                },
                "health": {
                    "type": "integer"
                },
                "holderAddress": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "intelligence": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                },
                "maxScore": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nextAdventureTime": {
                    "type": "string"
                },
                "nftAddress": {
                    "type": "string"
                },
                "ownerAddress": {
                    "type": "string"
                },
                "portrait": {
                    "type": "string"
                },
                "poster": {
                    "type": "string"
                },
                "productivity": {
                    "type": "integer"
                },
                "rarity": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "stamina": {
                    "type": "integer"
                },
                "static": {
                    "type": "string"
                },
                "stationRequired": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "strength": {
                    "type": "integer"
                },
                "tier": {
                    "type": "string"
                },
                "tokenId": {
                    "type": "string"
                },
                "totalScore": {
                    "type": "integer"
                },
                "vitality": {
                    "type": "integer"
                }
            }
        },
        "model.CharacterWorkingData": {
            "type": "object",
            "properties": {
                "advantage": {
                    "$ref": "#/definitions/model.AttributeData"
                },
                "courage": {
                    "type": "integer"
                },
                "dexterity": {
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "intelligence": {
                    "type": "integer"
                },
                "level": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "maxScore": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "nftAddress": {
                    "type": "string"
                },
                "poolId": {
                    "type": "integer"
                },
                "productivity": {
                    "type": "integer"
                },
                "salaryAmount": {
                    "type": "number"
                },
                "salaryToken": {
                    "type": "string"
                },
                "stamina": {
                    "type": "integer"
                },
                "stationRequired": {
                    "$ref": "#/definitions/model.AttributeData"
                },
                "status": {
                    "type": "string"
                },
                "strength": {
                    "type": "integer"
                },
                "tokenId": {
                    "type": "string"
                },
                "totalScore": {
                    "type": "integer"
                },
                "vitality": {
                    "type": "integer"
                },
                "workingBlock": {
                    "type": "integer"
                }
            }
        },
        "model.DailyWorkData": {
            "type": "object",
            "properties": {
                "assetId": {
                    "type": "string"
                },
                "banner": {
                    "type": "string"
                },
                "bannerJPG": {
                    "type": "string"
                },
                "bannerWebP": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "poolId": {
                    "type": "integer"
                },
                "requirement": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.WorkRequirement"
                    }
                },
                "slug": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                }
            }
        },
        "model.DailyWorkSuggestedCharacters": {
            "type": "object",
            "properties": {
                "characters": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.CharacterData"
                    }
                },
                "name": {
                    "type": "string"
                },
                "poolId": {
                    "type": "integer"
                },
                "slug": {
                    "type": "string"
                }
            }
        },
        "model.LeaderboardTopLevelCharacterData": {
            "type": "object",
            "properties": {
                "animatedMP4": {
                    "type": "string"
                },
                "animatedWebM": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "maxScore": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "ownerAddress": {
                    "type": "string"
                },
                "portrait": {
                    "type": "string"
                },
                "poster": {
                    "type": "string"
                },
                "ranking": {
                    "type": "integer"
                },
                "static": {
                    "type": "string"
                },
                "tokenId": {
                    "type": "string"
                },
                "totalScore": {
                    "type": "integer"
                }
            }
        },
        "model.Pagination": {
            "type": "object",
            "properties": {
                "pageCount": {
                    "type": "integer"
                },
                "pageNumber": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "model.RarityProbability": {
            "type": "object",
            "properties": {
                "common": {
                    "type": "integer"
                },
                "elite": {
                    "type": "integer"
                },
                "epic": {
                    "type": "integer"
                },
                "legendary": {
                    "type": "integer"
                },
                "rare": {
                    "type": "integer"
                }
            }
        },
        "model.ReferralProgram": {
            "type": "object",
            "properties": {
                "referral_date": {
                    "type": "string"
                },
                "totalReward": {
                    "type": "number"
                },
                "userAddress": {
                    "type": "string"
                }
            }
        },
        "model.SummaryWorkingData": {
            "type": "object",
            "properties": {
                "homeHero": {
                    "type": "integer"
                },
                "miningRatio": {
                    "type": "number"
                },
                "unclaimedReward": {
                    "type": "number"
                },
                "workHero": {
                    "type": "integer"
                }
            }
        },
        "model.UnclaimedRewardsAdventureLogData": {
            "type": "object",
            "properties": {
                "unclaimedRewardBSCD": {
                    "type": "string"
                },
                "unclaimedRewardMST": {
                    "type": "string"
                }
            }
        },
        "model.WorkRequirement": {
            "type": "object",
            "properties": {
                "attributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.AttributeRequirement"
                    }
                },
                "level": {
                    "type": "integer"
                },
                "role": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
		"escape": func(v interface{}) string {
			// escape tabs
			str := strings.Replace(v.(string), "\t", "\\t", -1)
			// replace " with \", and if that results in \\", replace that with \\\"
			str = strings.Replace(str, "\"", "\\\"", -1)
			return strings.Replace(str, "\\\\\"", "\\\\\\\"", -1)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register("swagger", &s{})
}
